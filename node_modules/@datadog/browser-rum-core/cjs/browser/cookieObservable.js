"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
exports.WATCH_COOKIE_INTERVAL_DELAY = void 0;
exports.createCookieObservable = createCookieObservable;
const browser_core_1 = require("@datadog/browser-core");
function createCookieObservable(configuration, cookieName) {
    const detectCookieChangeStrategy = window.cookieStore
        ? listenToCookieStoreChange(configuration)
        : watchCookieFallback;
    return new browser_core_1.Observable((observable) => detectCookieChangeStrategy(cookieName, (event) => observable.notify(event)));
}
function listenToCookieStoreChange(configuration) {
    return (cookieName, callback) => {
        const listener = (0, browser_core_1.addEventListener)(configuration, window.cookieStore, "change" /* DOM_EVENT.CHANGE */, (event) => {
            // Based on our experimentation, we're assuming that entries for the same cookie cannot be in both the 'changed' and 'deleted' arrays.
            // However, due to ambiguity in the specification, we asked for clarification: https://github.com/WICG/cookie-store/issues/226
            const changeEvent = event.changed.find((event) => event.name === cookieName) ||
                event.deleted.find((event) => event.name === cookieName);
            if (changeEvent) {
                callback(changeEvent.value);
            }
        });
        return listener.stop;
    };
}
exports.WATCH_COOKIE_INTERVAL_DELAY = browser_core_1.ONE_SECOND;
function watchCookieFallback(cookieName, callback) {
    const previousCookieValue = (0, browser_core_1.findCommaSeparatedValue)(document.cookie, cookieName);
    const watchCookieIntervalId = (0, browser_core_1.setInterval)(() => {
        const cookieValue = (0, browser_core_1.findCommaSeparatedValue)(document.cookie, cookieName);
        if (cookieValue !== previousCookieValue) {
            callback(cookieValue);
        }
    }, exports.WATCH_COOKIE_INTERVAL_DELAY);
    return () => {
        (0, browser_core_1.clearInterval)(watchCookieIntervalId);
    };
}
//# sourceMappingURL=cookieObservable.js.map