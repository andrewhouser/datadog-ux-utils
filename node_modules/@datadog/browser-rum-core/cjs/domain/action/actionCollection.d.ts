import type { ClocksState, Context, Observable } from '@datadog/browser-core';
import { ActionType } from '../../rawRumEvent.types';
import type { LifeCycle } from '../lifeCycle';
import type { RumConfiguration } from '../configuration';
import type { Hooks } from '../hooks';
import type { RumMutationRecord } from '../../browser/domMutationObservable';
import type { ActionContexts, ClickAction } from './trackClickActions';
export type { ActionContexts };
export interface CustomAction {
    type: typeof ActionType.CUSTOM;
    name: string;
    startClocks: ClocksState;
    context?: Context;
    handlingStack?: string;
}
export type AutoAction = ClickAction;
export declare function startActionCollection(lifeCycle: LifeCycle, hooks: Hooks, domMutationObservable: Observable<RumMutationRecord[]>, windowOpenObservable: Observable<void>, configuration: RumConfiguration): {
    addAction: (action: CustomAction) => void;
    actionContexts: ActionContexts;
    stop: () => void;
};
