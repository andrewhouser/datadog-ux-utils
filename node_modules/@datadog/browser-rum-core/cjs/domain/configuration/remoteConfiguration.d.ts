import type { RumInitConfiguration } from './configuration';
import type { RumSdkConfig } from './remoteConfiguration.types';
export type RemoteConfiguration = RumSdkConfig;
export type RumRemoteConfiguration = Exclude<RemoteConfiguration['rum'], undefined>;
export declare function fetchAndApplyRemoteConfiguration(initConfiguration: RumInitConfiguration): Promise<RumInitConfiguration | undefined>;
export declare function applyRemoteConfiguration(initConfiguration: RumInitConfiguration, rumRemoteConfiguration: RumRemoteConfiguration & {
    [key: string]: unknown;
}): RumInitConfiguration;
type FetchRemoteConfigurationResult = {
    ok: true;
    value: RumRemoteConfiguration;
} | {
    ok: false;
    error: Error;
};
export declare function fetchRemoteConfiguration(configuration: RumInitConfiguration): Promise<FetchRemoteConfigurationResult>;
export declare function buildEndpoint(configuration: RumInitConfiguration): string;
export {};
