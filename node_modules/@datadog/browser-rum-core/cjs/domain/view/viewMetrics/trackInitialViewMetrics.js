"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
exports.trackInitialViewMetrics = trackInitialViewMetrics;
const trackFirstContentfulPaint_1 = require("./trackFirstContentfulPaint");
const trackFirstInput_1 = require("./trackFirstInput");
const trackNavigationTimings_1 = require("./trackNavigationTimings");
const trackLargestContentfulPaint_1 = require("./trackLargestContentfulPaint");
const trackFirstHidden_1 = require("./trackFirstHidden");
function trackInitialViewMetrics(configuration, viewStart, setLoadEvent, scheduleViewUpdate) {
    const initialViewMetrics = {};
    const { stop: stopNavigationTracking } = (0, trackNavigationTimings_1.trackNavigationTimings)(configuration, (navigationTimings) => {
        setLoadEvent(navigationTimings.loadEvent);
        initialViewMetrics.navigationTimings = navigationTimings;
        scheduleViewUpdate();
    });
    const firstHidden = (0, trackFirstHidden_1.trackFirstHidden)(configuration, viewStart);
    const { stop: stopFCPTracking } = (0, trackFirstContentfulPaint_1.trackFirstContentfulPaint)(configuration, firstHidden, (firstContentfulPaint) => {
        initialViewMetrics.firstContentfulPaint = firstContentfulPaint;
        scheduleViewUpdate();
    });
    const { stop: stopLCPTracking } = (0, trackLargestContentfulPaint_1.trackLargestContentfulPaint)(configuration, firstHidden, window, (largestContentfulPaint) => {
        initialViewMetrics.largestContentfulPaint = largestContentfulPaint;
        scheduleViewUpdate();
    });
    const { stop: stopFIDTracking } = (0, trackFirstInput_1.trackFirstInput)(configuration, firstHidden, (firstInput) => {
        initialViewMetrics.firstInput = firstInput;
        scheduleViewUpdate();
    });
    function stop() {
        stopNavigationTracking();
        stopFCPTracking();
        stopLCPTracking();
        stopFIDTracking();
        firstHidden.stop();
    }
    return {
        stop,
        initialViewMetrics,
    };
}
//# sourceMappingURL=trackInitialViewMetrics.js.map