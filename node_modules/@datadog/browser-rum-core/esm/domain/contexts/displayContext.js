import { monitor } from '@datadog/browser-core';
import { getViewportDimension, initViewportObservable } from '../../browser/viewportObservable';
export function startDisplayContext(hooks, configuration) {
    let viewport;
    // Use requestAnimationFrame to delay the calculation of viewport dimensions until after SDK initialization, preventing long tasks.
    const animationFrameId = requestAnimationFrame(monitor(() => {
        viewport = getViewportDimension();
    }));
    const unsubscribeViewport = initViewportObservable(configuration).subscribe((viewportDimension) => {
        viewport = viewportDimension;
    }).unsubscribe;
    hooks.register(0 /* HookNames.Assemble */, ({ eventType }) => ({
        type: eventType,
        display: viewport ? { viewport } : undefined,
    }));
    return {
        stop: () => {
            unsubscribeViewport();
            if (animationFrameId) {
                cancelAnimationFrame(animationFrameId);
            }
        },
    };
}
//# sourceMappingURL=displayContext.js.map