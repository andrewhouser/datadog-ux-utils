import { SKIPPED, getSyntheticsResultId, getSyntheticsTestId, willSyntheticsInjectRum, isSyntheticsTest, } from '@datadog/browser-core';
export function startSyntheticsContext(hooks) {
    hooks.register(0 /* HookNames.Assemble */, ({ eventType }) => {
        if (!isSyntheticsTest()) {
            return SKIPPED;
        }
        const testId = getSyntheticsTestId();
        const resultId = getSyntheticsResultId();
        return {
            type: eventType,
            session: {
                type: "synthetics" /* SessionType.SYNTHETICS */,
            },
            synthetics: {
                test_id: testId,
                result_id: resultId,
                injected: willSyntheticsInjectRum(),
            },
        };
    });
}
//# sourceMappingURL=syntheticsContext.js.map