import { addEventListeners, noop } from '@datadog/browser-core';
import { supportPerformanceTimingEvent, RumPerformanceEntryType } from '../../../browser/performanceObservable';
export function trackFirstHidden(configuration, viewStart, eventTarget = window) {
    if (document.visibilityState === 'hidden') {
        return { timeStamp: 0, stop: noop };
    }
    if (supportPerformanceTimingEvent(RumPerformanceEntryType.VISIBILITY_STATE)) {
        const firstHiddenEntry = performance
            .getEntriesByType(RumPerformanceEntryType.VISIBILITY_STATE)
            .filter((entry) => entry.name === 'hidden')
            .find((entry) => entry.startTime >= viewStart.relative);
        if (firstHiddenEntry) {
            return { timeStamp: firstHiddenEntry.startTime, stop: noop };
        }
    }
    let timeStamp = Infinity;
    const { stop } = addEventListeners(configuration, eventTarget, ["pagehide" /* DOM_EVENT.PAGE_HIDE */, "visibilitychange" /* DOM_EVENT.VISIBILITY_CHANGE */], (event) => {
        if (event.type === "pagehide" /* DOM_EVENT.PAGE_HIDE */ || document.visibilityState === 'hidden') {
            timeStamp = event.timeStamp;
            stop();
        }
    }, { capture: true });
    return {
        get timeStamp() {
            return timeStamp;
        },
        stop,
    };
}
//# sourceMappingURL=trackFirstHidden.js.map