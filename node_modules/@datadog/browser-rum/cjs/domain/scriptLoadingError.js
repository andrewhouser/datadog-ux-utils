"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
exports.reportScriptLoadingError = reportScriptLoadingError;
const browser_core_1 = require("@datadog/browser-core");
function reportScriptLoadingError({ configuredUrl, error, source, scriptType, }) {
    browser_core_1.display.error(`${source} failed to start: an error occurred while initializing the ${scriptType}:`, error);
    if (error instanceof Event || (error instanceof Error && isMessageCspRelated(error.message))) {
        let baseMessage;
        if (configuredUrl) {
            baseMessage = `Please make sure the ${scriptType} URL ${configuredUrl} is correct and CSP is correctly configured.`;
        }
        else {
            baseMessage = 'Please make sure CSP is correctly configured.';
        }
        browser_core_1.display.error(`${baseMessage} See documentation at ${browser_core_1.DOCS_ORIGIN}/integrations/content_security_policy_logs/#use-csp-with-real-user-monitoring-and-session-replay`);
    }
    else if (scriptType === 'worker') {
        (0, browser_core_1.addTelemetryError)(error);
    }
}
function isMessageCspRelated(message) {
    return (message.includes('Content Security Policy') ||
        // Related to `require-trusted-types-for` CSP: https://developer.mozilla.org/en-US/docs/Web/HTTP/Headers/Content-Security-Policy/require-trusted-types-for
        message.includes("requires 'TrustedScriptURL'"));
}
//# sourceMappingURL=scriptLoadingError.js.map