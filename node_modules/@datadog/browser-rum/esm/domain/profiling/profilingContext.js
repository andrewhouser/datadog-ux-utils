import { SKIPPED } from '@datadog/browser-core';
import { RumEventType } from '@datadog/browser-rum-core';
export const startProfilingContext = (hooks) => {
    // Default status is `starting`.
    let currentContext = {
        status: 'starting',
    };
    // Register the assemble hook to add the profiling context to the event attributes.
    hooks.register(0 /* HookNames.Assemble */, ({ eventType }) => {
        if (eventType !== RumEventType.VIEW && eventType !== RumEventType.LONG_TASK) {
            return SKIPPED;
        }
        return {
            type: eventType,
            _dd: {
                profiling: currentContext,
            },
        };
    });
    return {
        get: () => currentContext,
        set: (newContext) => {
            currentContext = newContext;
        },
    };
};
//# sourceMappingURL=profilingContext.js.map