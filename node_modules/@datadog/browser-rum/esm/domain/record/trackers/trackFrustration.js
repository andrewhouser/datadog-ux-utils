import { ActionType, RumEventType } from '@datadog/browser-rum-core';
import { RecordType } from '../../../types';
export function trackFrustration(lifeCycle, frustrationCb, recordIds) {
    const frustrationSubscription = lifeCycle.subscribe(12 /* LifeCycleEventType.RAW_RUM_EVENT_COLLECTED */, (data) => {
        var _a, _b;
        if (data.rawRumEvent.type === RumEventType.ACTION &&
            data.rawRumEvent.action.type === ActionType.CLICK &&
            ((_b = (_a = data.rawRumEvent.action.frustration) === null || _a === void 0 ? void 0 : _a.type) === null || _b === void 0 ? void 0 : _b.length) &&
            'events' in data.domainContext &&
            data.domainContext.events &&
            data.domainContext.events.length) {
            frustrationCb({
                timestamp: data.rawRumEvent.date,
                type: RecordType.FrustrationRecord,
                data: {
                    frustrationTypes: data.rawRumEvent.action.frustration.type,
                    recordIds: data.domainContext.events.map((e) => recordIds.getIdForEvent(e)),
                },
            });
        }
    });
    return {
        stop: () => {
            frustrationSubscription.unsubscribe();
        },
    };
}
//# sourceMappingURL=trackFrustration.js.map