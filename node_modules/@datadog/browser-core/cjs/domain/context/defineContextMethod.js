"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
exports.defineContextMethod = defineContextMethod;
exports.bufferContextCalls = bufferContextCalls;
const telemetry_1 = require("../telemetry");
const monitor_1 = require("../../tools/monitor");
function defineContextMethod(getStrategy, contextName, methodName, usage) {
    return (0, monitor_1.monitor)((...args) => {
        if (usage) {
            (0, telemetry_1.addTelemetryUsage)({ feature: usage });
        }
        return getStrategy()[contextName][methodName](...args);
    });
}
function bufferContextCalls(preStartContextManager, name, bufferApiCalls) {
    preStartContextManager.changeObservable.subscribe(() => {
        const context = preStartContextManager.getContext();
        bufferApiCalls.add((startResult) => startResult[name].setContext(context));
    });
}
//# sourceMappingURL=defineContextMethod.js.map